<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GGVY on GGVY</title>
    <link>/</link>
    <description>Recent content in GGVY on GGVY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 George G. Vega Yon</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Working with sparse matrices in C&#43;&#43; (part 2)</title>
      <link>/post/working-with-sparse-matrices-in-cpp-part2/</link>
      <pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/working-with-sparse-matrices-in-cpp-part2/</guid>
      <description>


&lt;p&gt;Last time I talked about this, iterators in armadillo were fast only in the constext of colum-major access, since data is stored like that. Today, the developers of armadillo, &lt;a href=&#34;http://conradsanderson.id.au/&#34;&gt;Dr Conrad Sanderson&lt;/a&gt; and &lt;a href=&#34;http://www.ratml.org/&#34;&gt;Dr Ryan Curtin&lt;/a&gt;, have work furiously on adding new features to the header-only library, which has lead me to update the results of a benchmark I wrote on 2018:&lt;/p&gt;
&lt;pre class=&#34;cpp&#34;&gt;&lt;code&gt;#include &amp;lt;RcppArmadillo.h&amp;gt;
// [[Rcpp::depends(RcppArmadillo)]]

using namespace Rcpp;

// Column-major method iterator (default)
// [[Rcpp::export]]
arma::vec sp_iterate(arma::sp_mat x) {
  
  arma::vec ans(x.n_nonzero);
  
  typedef arma::sp_mat::const_iterator iter;
  int k = 0;
  for (iter i = x.begin(); i != x.end(); ++i)
    ans.at(k++) = *i;
  
  return ans;
}

// Sort-of row-major method iterator. For this to work, we first need to tell
// armadillo which row we would like to look at... this doesn&amp;#39;t look nice.
// [[Rcpp::export]]
arma::vec sp_row_iterate(arma::sp_mat x) {
  
  arma::vec ans(x.n_nonzero);
  
  typedef arma::sp_mat::const_row_iterator iter;
  int k = 0;
  for (unsigned int i = 0; i &amp;lt; x.n_rows; ++i)
    for (iter j = x.begin_row(i); j != x.end_row(i); ++j)
      ans.at(k++) = *j;
  
  return ans;
}


// Another sort-of row-major method iterator. Now, instead of using
// `const_row_iterator`, we use `const_iterator` but transpose the matrix first
// [[Rcpp::export]]
arma::vec sp_t_iterate(arma::sp_mat x) {
  
  arma::vec ans(x.n_nonzero);
  arma::sp_mat z = x.t();
  
  int k = 0;
  typedef arma::sp_mat::const_iterator iter;
  for (iter i = z.begin(); i != z.end(); ++i)
    ans.at(k++) = *i;
  
  return ans;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And here is what we get from calling each of the functions:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(Matrix)
M &amp;lt;- matrix(0,nrow=3, ncol=3)
M[1,2] &amp;lt;- 12
M[2,1] &amp;lt;- 21
M[2,3] &amp;lt;- 23
M[3,2] &amp;lt;- 32
(M &amp;lt;- methods::as(M, &amp;quot;dgCMatrix&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 3 x 3 sparse Matrix of class &amp;quot;dgCMatrix&amp;quot;
##              
## [1,]  . 12  .
## [2,] 21  . 23
## [3,]  . 32  .&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data.frame(
  col_major  = sp_iterate(M),
  row_major  = sp_row_iterate(M),
  row_major2 = sp_t_iterate(M)
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   col_major row_major row_major2
## 1        21        12         12
## 2        12        21         21
## 3        32        23         23
## 4        23        32         32&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now what about speed?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(Matrix)
set.seed(1)
n &amp;lt;- 1000
M &amp;lt;- methods::as(
  matrix(runif(n^2) &amp;lt; .001, nrow = n),
  &amp;quot;dgCMatrix&amp;quot;
)

microbenchmark::microbenchmark(
   sp_row_iterate(M),
   sp_t_iterate(M),
   times = 1000, unit=&amp;quot;relative&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Unit: relative
##               expr      min       lq    mean   median       uq      max
##  sp_row_iterate(M) 735.1931 472.8596 361.332 374.4857 313.4359 30.93766
##    sp_t_iterate(M)   1.0000   1.0000   1.000   1.0000   1.0000  1.00000
##  neval cld
##   1000   b
##   1000  a&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It turns out that &lt;code&gt;const_row_iterator&lt;/code&gt; implementation is significantly slower because of how the data is stored. The &lt;code&gt;SpMat&lt;/code&gt; object from &lt;code&gt;armadillo&lt;/code&gt; uses the &lt;a href=&#34;https://en.wikipedia.org/wiki/Row-_and_column-major_order&#34;&gt;Column-Major Order&lt;/a&gt; method for storing the sparse matrix, which means that, whenever we want to iterate through columns this is as easy as just reading the values as they are stored. On the other hand, iterating through row-major order implies doing a somewhat exhaustive search of non-empty cells at each row, which eventually becomes computationally very inefficient.&lt;/p&gt;
&lt;p&gt;For those of you who like looking at source code, you can take a look at the way the &lt;code&gt;const_row_iterator&lt;/code&gt; are implemented &lt;a href=&#34;https://fossies.org/dox/armadillo-8.300.3/SpMat__iterators__meat_8hpp_source.html&#34;&gt;here&lt;/a&gt; starting line 392. Here is an extract from the code:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is irritating because we don’t know where the elements are in each
row. What we will do is loop across all columns looking for elements in
row 0 (and add to our sum), then in row 1, and so forth, until we get to
the desired position.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I can’t agree more with that!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fmcmc: A friendly MCMC framework</title>
      <link>/publication/fmcmc-paper/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/fmcmc-paper/</guid>
      <description></description>
    </item>
    
    <item>
      <title>sluRm: A lightweight wrapper for HPC with Slurm</title>
      <link>/publication/slurm-paper/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/slurm-paper/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sensing eating mimicry among family members</title>
      <link>/publication/bites-paper/</link>
      <pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/bites-paper/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Exponential Random Graph models for Little Networks</title>
      <link>/publication/ergmito-paper/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/ergmito-paper/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Big Problems for Small Networks: Statistical Analysis of Small Networks and Team Performance</title>
      <link>/talk/nu2019/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/talk/nu2019/</guid>
      <description>&lt;p&gt;As an invitation from Prof. Noshir Contractor, I gave this talk at Northwestern University&amp;rsquo;s SONIC Lab followed by a workshop on the tools that we have been developing for implemting the methods described in it. The lab was kind enough to record my talk as well as advertise it &lt;a href=&#34;http://sonic.northwestern.edu/sonic-speaker-series-presents-george-g-vega-yon/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is joint work with &lt;a href=\&#34;https://www.kayladelahaye.net/\&#34; target=\&#34;_blank\&#34;&gt;Prof. Kayla de la Haye (USC)&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Network influences on policy implementation: Evidence from a global health treaty</title>
      <link>/publication/fctc-paper/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/fctc-paper/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Small network statistics for the network science of teams</title>
      <link>/talk/netscix2019/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/talk/netscix2019/</guid>
      <description>&lt;p&gt;Joint work with Kayla de la Haye.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Redes y Econometria Espacial con R</title>
      <link>/talk/redes-estadisticas2018/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/redes-estadisticas2018/</guid>
      <description>&lt;p&gt;This was my first time talking about Statistical models for network analysis and spatial econometrics in my native language (spanish).&lt;/p&gt;

&lt;p&gt;This very same workshop was taught during December 2018 and January 2019 at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instituto Milenio Fundamento de los datos, Universidad Católica de Chile.&lt;/li&gt;
&lt;li&gt;Centro de Investigación en Complejidad Social (CISC), Universidad del Desarrollo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another version of my talk can be found &lt;a href=&#34;https://www.facebook.com/complejidadsocial/videos/2217254995005631/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Computacion de Alto Rendimiento con R</title>
      <link>/talk/satrday-scl2018/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/satrday-scl2018/</guid>
      <description>&lt;p&gt;This was my first time talking about HPC with R in my native language (spanish).&lt;/p&gt;

&lt;p&gt;This very same workshop was taught during December 2018 and January 2019 at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The SatRdays conference in Santiago de Chile (organized by my friends at the &lt;a href=&#34;https://www.meetup.com/useRchile/&#34; target=&#34;_blank&#34;&gt;R Users Group in SCL&lt;/a&gt; and R &lt;a href=&#34;https://www.meetup.com/rladies-scl/&#34; target=&#34;_blank&#34;&gt;Ladies in SCL&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Instituto Milenio para el Fundamento de los Datos at Universidad Católica de Chile (&lt;a href=&#34;https://imfd.cl&#34; target=&#34;_blank&#34;&gt;website&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Núcleo Milenio para el estudio del curso de vida y vulnerabilidad at Universidad de Santiago de Chile (folks there were very nice and wrote two news articles based on my talk: &lt;a href=&#34;http://economia.usach.cl/index.php/noticias-blog/81-taller-computacion-de-alto-rendimiento-en-r&#34; target=&#34;_blank&#34;&gt;one&lt;/a&gt;  and &lt;a href=&#34;http://mliv.cl/2019/01/23/mliv-capacita-a-estudiantes-de-postgrado-investigadores-y-academicos-en-r/&#34; target=&#34;_blank&#34;&gt;two&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Big Problems for Small Networks: Small Network Statistics</title>
      <link>/talk/nasn2018/</link>
      <pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/nasn2018/</guid>
      <description>&lt;p&gt;Joint work with Kayla de la Haye.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Overview of Social Network Models</title>
      <link>/talk/usccais-sep2018/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/usccais-sep2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>R Bootcamp for Scientific Computing</title>
      <link>/talk/rbootcamp-2018/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/rbootcamp-2018/</guid>
      <description>&lt;p&gt;This 5-day bootcamp was held at USC&amp;rsquo;s Department of Preventive medicine jointly with &lt;a href=&#34;https://malco.io&#34; target=&#34;_blank&#34;&gt;Malcolm Barrett&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workshop: Introduction to R (for HPC users)</title>
      <link>/talk/intro-2-r-4-hpc-users-2018/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/intro-2-r-4-hpc-users-2018/</guid>
      <description>&lt;p&gt;The presentation source code can be found &lt;a href=&#34;https://github.com/gvegayon/software-dev/tree/master/happy_scientist/parallel_computing&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The &#39;Happy Scientist&#39; Workshop #1: An introduction to high-performance computing using R</title>
      <link>/talk/hpc-in-r-2018/</link>
      <pubDate>Thu, 29 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/hpc-in-r-2018/</guid>
      <description>&lt;p&gt;This talk was jointly with Garrett Weaver. The presentation source code can be found &lt;a href=&#34;https://github.com/gvegayon/software-dev/tree/master/happy_scientist/parallel_computing&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
