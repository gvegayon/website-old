<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on George G. Vega Yon</title>
    <link>https://gvegayon.github.io/gvegayon/post/</link>
    <description>Recent content in Posts on George G. Vega Yon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 George G. Vega Yon</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 -0800</lastBuildDate>
    <atom:link href="/gvegayon/post/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Research != Software dev?</title>
      <link>https://gvegayon.github.io/gvegayon/post/research-software-dev/</link>
      <pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gvegayon.github.io/gvegayon/post/research-software-dev/</guid>
      <description>&lt;p&gt;Some times I feel like I&amp;rsquo;m in the wrong place. At least a few times, while talking to scientists, I&amp;rsquo;ve realized that people don&amp;rsquo;t think of scientific software the same way I do, this is, as actual research. While I know I&amp;rsquo;m not a fancy computer/informatics scientist, I do believe that scientific software development is underestimated.&lt;/p&gt;

&lt;p&gt;When I was in the visiting day at Caltech, I recall that one of the questions that our host did to us during the visiting day was &amp;ldquo;what makes you excited about coming to Caltech?&amp;rdquo; and my response was something like &amp;ldquo;creating new things with other people!&amp;rdquo;, which in this context is obiously tools! Later on while on grad school I understood that people was not as excited as I was on that. And now a days, that same feeling of misfits has hit me a couple of times while talking to professors and grad students.&lt;/p&gt;

&lt;p&gt;The thing is, I still believe scientific software development is science too. While my claim may be a bit biased, since I really love R and &amp;ldquo;creating things with other people&amp;rdquo;, I know that I&amp;rsquo;m not alone (see for example []). A couple of arguments:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Theory is very important, yes, but in order to be useful it has to be available to apply/make use of it in some fashion. This is particlarly relevant for statistics/economics. Now a days, with all the computing power at the tip of our hands there&amp;rsquo;s no excuse for researchers to create tools that make whatever they are doing available.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Writing scientific software helps theory advance. Imagine the following scenario: a fancy new method/model is developed and published in a fancy journal, then&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Environments in R Rock</title>
      <link>https://gvegayon.github.io/gvegayon/post/environments-in-r-rock/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gvegayon.github.io/gvegayon/post/environments-in-r-rock/</guid>
      <description>&lt;p&gt;Last week I found myself working on &lt;a href=&#34;https://github.com/USCCANA/netdiffuseR&#34; target=&#34;_blank&#34;&gt;netdiffuseR&lt;/a&gt; trying to establish nice defaults for some plotting functions with the following goals:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Make the code easy to maintain: So if I need to change defaults I just change a few lines and that works for all plot functions,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make the code easy to see in the manual (help) file: So is easier to the user to focus on the main features of a plot rather than looking at a large description of a function with lots of parameters and lots of defaults, and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make the code hopefully efficient: Not that I care that much, but if I’m going to be passing arguments across functions, it better be efficient!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, long story short, I came up with the following approach:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Create a list of defaults included in the package: This is actually something that I’ve already seen in some other places, like for example &lt;a href=&#34;https://github.com/igraph/rigraph/blob/665d71ebd40cdfe9b996a4f50c35d65b791e4102/R/par.R&#34; target=&#34;_blank&#34;&gt;igraph&lt;/a&gt;, they have a couple of environments that set plotting defaults.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make a heavy use of the ellipsis! &lt;code&gt;...&lt;/code&gt; So I can actually grab whatever the user passed through it, and later modify the arguments (I’ll show this in an example)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use 1. to modify 2. at will… with environments!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While I’m not sure this is the most efficient way of doing this (and I’m pretty sure that I’m not the first person to do something like this), it works for what I’m doing right now. The following piece of code illustrates how this works.&lt;/p&gt;
&lt;p&gt;This is a list of the defaults that we would like all the functions to have:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This list holds the default parameters
defaults &amp;lt;- list(color=&amp;quot;steelblue&amp;quot;, add=FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function is the one that sets the defaults, follow the comments to see how it works:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This function sets the defaults giving the name of an object that holds the
# parameters... or at least should hold them!
set.defaults &amp;lt;- function(obj_name) {
  
  # Where was this function called from? This way we get
  # the parent frame (the environment from where the function was called)
  # this actually holds all the elements, but works as a reference, so no copy!
  env &amp;lt;- parent.frame()
  
  # Now we loop throught the defaults that I&amp;#39;ve specified
  # in -defaults-
  for (d in names(defaults))
    # If -d- hasn&amp;#39;t been specified, then set it!
    if (!length(env[[obj_name]][[d]]))
      env[[obj_name]][[d]] &amp;lt;- defaults[[d]]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a function that illustrates how everything works together. So we can pass extra arguments with the ellipsis, we store them in a list called &lt;code&gt;dots&lt;/code&gt; (I’m sure there must be a more efficient way of doing this, but it’s OK for now :]), sets the defaults calling &lt;code&gt;set.defaults&lt;/code&gt;, and returns the &lt;code&gt;dots&lt;/code&gt; list:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f &amp;lt;- function(...) {
  
  # Getting the dots
  dots &amp;lt;- list(...)
  
  # Setting defaults
  set.defaults(&amp;quot;dots&amp;quot;)
  
  # Did we got them?
  return(dots)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s see if it works!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $color
## [1] &amp;quot;steelblue&amp;quot;
## 
## $add
## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;f(color=&amp;quot;green&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $color
## [1] &amp;quot;green&amp;quot;
## 
## $add
## [1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As expected, the first call of the function returns the default parameters. In the second call, since I specified &lt;code&gt;&amp;quot;green&amp;quot;&lt;/code&gt;, the function &lt;code&gt;set.defaults&lt;/code&gt; only set the argument &lt;code&gt;add&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can read more about environments in &lt;a href=&#34;http://adv-r.had.co.nz/Environments.html&#34; target=&#34;_blank&#34;&gt;Hadley Wickham’s Advance R&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sistema de Pensiones en Chile</title>
      <link>https://gvegayon.github.io/gvegayon/post/sistema-de-pensiones-en-chile/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gvegayon.github.io/gvegayon/post/sistema-de-pensiones-en-chile/</guid>
      <description>&lt;p&gt;Con todo el tema del plebiscito anti AFP (porque no es más que eso), y varios correos que he recibido en los últimos años con personas preguntándome acerca de como funciona el sistema de pensiones (que me parece genial!), me decidí a escribir este pequeño post con algunas de las ideas que tengo al respecto. Y qué mejor forma que partir por los mitos sobre el sistema!&lt;/p&gt;
&lt;div id=&#34;mitos-sobre-el-sistema-de-pensiones&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Mitos sobre el sistema de pensiones&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://www.latercera.com/noticia/mitos-y-verdades-del-sistema-de-pensiones-chileno/&#34; class=&#34;uri&#34;&gt;http://www.latercera.com/noticia/mitos-y-verdades-del-sistema-de-pensiones-chileno/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.quepasa.cl/articulo/negocios/2017/08/mitos-leyendas-y-pensiones-parte-i.shtml/&#34; class=&#34;uri&#34;&gt;http://www.quepasa.cl/articulo/negocios/2017/08/mitos-leyendas-y-pensiones-parte-i.shtml/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.pulso.cl/empresas-mercados/los-ocho-mitos-y-realidades-del-sistema-de-pensiones-chileno/&#34; class=&#34;uri&#34;&gt;http://www.pulso.cl/empresas-mercados/los-ocho-mitos-y-realidades-del-sistema-de-pensiones-chileno/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.uchile.cl/noticias/125298/no--afp-mitos-y-realidades&#34; class=&#34;uri&#34;&gt;http://www.uchile.cl/noticias/125298/no--afp-mitos-y-realidades&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.aafp.cl/mitos-y-realidades-de-los-sistemas-de-pensiones/&#34; class=&#34;uri&#34;&gt;https://www.aafp.cl/mitos-y-realidades-de-los-sistemas-de-pensiones/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.elmercurio.com/Inversiones/Noticias/Pensiones/2015/11/19/Mitos-y-realidades-del-sistema-de-pensiones.aspx&#34; class=&#34;uri&#34;&gt;http://www.elmercurio.com/Inversiones/Noticias/Pensiones/2015/11/19/Mitos-y-realidades-del-sistema-de-pensiones.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www8.gsb.columbia.edu/faculty/jstiglitz/sites/jstiglitz/files/2001_Rethinking_Pension_Reform_Ten_Myths.pdf&#34; class=&#34;uri&#34;&gt;https://www8.gsb.columbia.edu/faculty/jstiglitz/sites/jstiglitz/files/2001_Rethinking_Pension_Reform_Ten_Myths.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El problema es que hay muchos mitos y los “líderes” son los que los difunden. Aquí van algunos:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Te calculan la pension hasta los 110 años!&lt;/strong&gt; Falso! Cuando se calcula el monto de pension por retiro programado (la modalidad mas comun), se utilizan lo que se conocen como tablas de mortalidad. En ellas se considera la posibilidad (que es diferente a certeza) de sobrevivir hasta los 110 años. De no usar esas tablas la alternativa seria, por ejemplo, calcular pago de pensiones hasta los 85 años (que es mas menos la edad de sobrevida promedio del hombre en Chile), y que pasa si pasas los 85, 90 años? Eso es lo que se trata de evitar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Las AFP se estan haciendo ricas con mi plata!&lt;/strong&gt; Falso. Las AFP cobran comision por contribución, lo que quiere decir que te cobran por cada aporte que tu haces, en otras palabras, las AFPs NO TOCAN TU FONDO DE PENSION. Hoy las comisiones van de 0.41% (Planvital) a 1.5% (Cuprum)… Si quieres que las AFP no ganen tanto, entonces cambiate a una que cobre poco…&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Trabaje toda mi vida y me pagan una &lt;span class=&#34;math inline&#34;&gt;\(\#\#\)&lt;/span&gt;?% de pensión! Obviamente la culpa es del sistema!&lt;/strong&gt; Lamentablemente no es así. Luego de cientos de estudios científicos muy complejos, los expertos llegaron a increíble conclusión de que para gastar más mañana hay que ahorrar más hoy. Si hay algo que se debería cambiar en el sistema, es que la tasa de contribución deberia de ser de al menos 15% y sin tope. Hoy es de 10%.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mi [[elija un familiar]] trabajó toda su vida, se jubiló y ahora gana mucho menos de la mitad!&lt;/strong&gt; Tiene que ver con lo anterior. Resulta que muchas personas que se están jubilando con el “sistema nuevo” se vieron perjudicadas por faltas por parte de sus empleadores. Muchas personas o cotizaron por el mínimo (que equivale a decir que cotizaron por menos del 10%), o de frentón llegaron a arreglos con sus empleadores donde les pagaron “retroactivamente” las cotizaciones. El problema es el siguiente, las cotizaciones más importantes son las de los primeros años. Al momento de acercarse a la edad de jubilación, lo único que queda es aportar más dinero en grandes cantidades, pero si nunca ahorraste cuando joven, no puedes esperar tener una pensión similar a la de tus últimos años trabajando.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;El estado manejaría mejor la plata&lt;/strong&gt; Aun que lo dudo, puede ser. Pero de todas formas, como ya he dicho antes, la clave está en aumentar la tasa de ahorro. Aún cuando tengas al mejor administrador de fondos (ya sea estatal o privado), nada cambiará si la tasa de ahorro no cambia.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Al final del día, si bien el sistema no es perfecto, lo unique que si es seguro es que volver a un sistema de reparto no es solución. En mi opinión, los sistemas mixtos (que de hecho es lo que tenemos en Chile hoy) son la solución, y quizás dar más opciones de ahorro a la gente. Pero al final del día, la clave está en ahorrar más. Si no ahorramos lo suficiente, el sistema en el que se administre nuestro dinero da lo mismo…&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;simulando-politica&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Simulando política&lt;/h2&gt;
&lt;p&gt;Para entender de mejor manera el problema, a continuación presento un set de simulaciones sencillas donde varío dos parámetros del sistema de pensiones: La tasa de contribución, y el año de retiro. Antes de continuar es importante notar que estas simulaciones se realizan bajo los siguientes supuestos:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;No hay lagunas, en otras palabras, el trabajador nunca está desempleado&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sólo existe un fondo, por lo tanto no hablaré de los tipos de fondos en que se invierte el dinero.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Al momento del retiro, el cálculo de la pensión se hace assumiendo que la persona es soltera.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Las siguientes equaciones describen el modelo de simulación:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{aligned}
I_1 &amp;amp;= 300 \\
I_t &amp;amp;= I_{t-1}\times\left(1 + \frac{r_I}{\log(t)}\right), \quad t&amp;gt;1\mbox{ y }r_I\sim N(0.02, 0.02)\\
C_t &amp;amp;= 12I_{t}\times a\\
S_t &amp;amp; = (S_{t-1} + C_t)\times(1 + R_t),\quad R_t\sim N(.04, .1)
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Donde &lt;span class=&#34;math inline&#34;&gt;\(I_t\)&lt;/span&gt; es el nivel de ingreso (remuneración) en el año &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(r_t\)&lt;/span&gt; es la tasa de crecimiento anual del ingreso en el año &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(S_t\)&lt;/span&gt; es el saldo del fondo de capitalización individual en el año &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(C_t\)&lt;/span&gt; es el monto anual de contribución en el año &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt;, y &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt; es la tasa de contribución mensual.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gvegayon.github.io/gvegayon/&#34;https://gvegayon.github.io/gvegayon/&#34;  # End your URL with a `/` trailing slash.post/2017-09-29-sistema-de-pensiones-en-chile_files/figure-html/Simulando-renta-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;!-- html table generated in R 3.4.2 by xtable 1.8-2 package --&gt;
&lt;!-- Sat Nov  4 00:39:05 2017 --&gt;
&lt;table border=&#34;1&#34;&gt;
&lt;caption align=&#34;bottom&#34;&gt;
Distribución de Rentabilidad Anual simulada (en %)
&lt;/caption&gt;
&lt;tr&gt;
&lt;th&gt;
2.5%
&lt;/th&gt;
&lt;th&gt;
10%
&lt;/th&gt;
&lt;th&gt;
50%
&lt;/th&gt;
&lt;th&gt;
90%
&lt;/th&gt;
&lt;th&gt;
97.5%
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
-15.64
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
-8.82
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
4.02
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
16.79
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
23.64
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;!-- html table generated in R 3.4.2 by xtable 1.8-2 package --&gt;
&lt;!-- Sat Nov  4 00:39:06 2017 --&gt;
&lt;table border=&#34;1&#34;&gt;
&lt;caption align=&#34;bottom&#34;&gt;
Distribución de tasas de reemplazo fijando tasa de cotizacion en 7%. Filas representan edad de retiro y columnas percentil.
&lt;/caption&gt;
&lt;tr&gt;
&lt;th&gt;
&lt;/th&gt;
&lt;th&gt;
2.5%
&lt;/th&gt;
&lt;th&gt;
10%
&lt;/th&gt;
&lt;th&gt;
50%
&lt;/th&gt;
&lt;th&gt;
90%
&lt;/th&gt;
&lt;th&gt;
97.5%
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
60
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
11.48
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
14.42
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
22.07
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
34.93
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
44.33
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
63
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
13.87
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
17.48
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
27.72
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
44.20
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
56.54
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
65
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
15.60
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
19.97
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
32.00
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
52.14
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
68.49
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
67
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
17.83
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
22.98
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
37.20
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
61.85
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
80.99
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;!-- html table generated in R 3.4.2 by xtable 1.8-2 package --&gt;
&lt;!-- Sat Nov  4 00:39:06 2017 --&gt;
&lt;table border=&#34;1&#34;&gt;
&lt;caption align=&#34;bottom&#34;&gt;
Distribución de tasas de reemplazo fijando tasa de cotizacion en 10%. Filas representan edad de retiro y columnas percentil.
&lt;/caption&gt;
&lt;tr&gt;
&lt;th&gt;
&lt;/th&gt;
&lt;th&gt;
2.5%
&lt;/th&gt;
&lt;th&gt;
10%
&lt;/th&gt;
&lt;th&gt;
50%
&lt;/th&gt;
&lt;th&gt;
90%
&lt;/th&gt;
&lt;th&gt;
97.5%
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
60
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
16.40
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
20.60
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
31.53
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
49.90
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
63.34
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
63
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
19.82
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
24.97
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
39.60
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
63.14
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
80.77
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
65
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
22.28
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
28.53
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
45.71
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
74.48
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
97.85
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
67
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
25.47
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
32.83
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
53.14
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
88.35
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
115.70
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;!-- html table generated in R 3.4.2 by xtable 1.8-2 package --&gt;
&lt;!-- Sat Nov  4 00:39:06 2017 --&gt;
&lt;table border=&#34;1&#34;&gt;
&lt;caption align=&#34;bottom&#34;&gt;
Distribución de tasas de reemplazo fijando tasa de cotizacion en 15%. Filas representan edad de retiro y columnas percentil.
&lt;/caption&gt;
&lt;tr&gt;
&lt;th&gt;
&lt;/th&gt;
&lt;th&gt;
2.5%
&lt;/th&gt;
&lt;th&gt;
10%
&lt;/th&gt;
&lt;th&gt;
50%
&lt;/th&gt;
&lt;th&gt;
90%
&lt;/th&gt;
&lt;th&gt;
97.5%
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
60
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
24.60
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
30.90
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
47.30
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
74.85
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
95.00
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
63
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
29.73
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
37.46
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
59.39
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
94.71
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
121.16
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
65
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
33.43
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
42.79
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
68.57
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
111.73
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
146.77
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;
67
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
38.21
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
49.25
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
79.72
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
132.53
&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;
173.55
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An Unexpected Tobit Fact</title>
      <link>https://gvegayon.github.io/gvegayon/post/an-unexpected-tobit-fact/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gvegayon.github.io/gvegayon/post/an-unexpected-tobit-fact/</guid>
      <description>&lt;p&gt;Hoy recibí un correo inesperado de mi jefe aca en USC quejándose (preguntándome mas bien) que por qué algunos pares de especificaciones Tobit eran idénticas. Mi primera impresión fue “seguro R guardó la misma tabla con nombre distinto… ups!”, algo que podía ser posible pues, además de que soy humano, el proceso para correr los modelos lo había automatizado pues en total son 270 especificaciones… no iba a escribir una por una!&lt;/p&gt;
&lt;p&gt;Al volver a correr un par de modelos de manera “manual”, me di cuenta que efectivamente los resultados eran idénticos, algo que no esperaba. Cuáles eran las especifaciones?&lt;/p&gt;
&lt;span class=&#34;math display&#34;&gt;\[\begin{align*}
y &amp;amp; = X\beta + \varepsilon,\quad \mbox{if }y_{miss} \neq 0\tag{1} \\
y &amp;amp; = X\beta + y_{miss} + \varepsilon \tag{2}
\end{align*}\]&lt;/span&gt;
&lt;p&gt;Donde y_miss es una dummy igual a 0 si es que y es missing. En otras palabras, el primer modelo excluye aquellas observaciones en las cuales y es missing, y el segundo las incluye assumiendo que son iguales a 0, pero además agrega una dummy indicando cuando tal supuesto se aplicó. Se que están pensando que el modelo es endógeno y todo eso (no me miren feo), pero solo lo corrí para complacer a mi jefe y ver que pasaba :). Obviamente no incluiremos ese modelo en nuestro paper!&lt;/p&gt;
&lt;p&gt;Para estar seguro de lo que estaba haciendo, decidí hacer una simulación con datos similares, una variable y truncada en &amp;lt; 0 y aleatoriamente agregando zeros en y para simular la imputación que hicimos en nuestros datos. Sorprendentemente, ambas especificaciones resultaron en lo mismo!&lt;/p&gt;
&lt;p&gt;Acá va el codigo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rm(list = ls())
library(AER)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: car&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: lmtest&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;zoo&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     as.Date, as.Date.numeric&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: sandwich&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: survival&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Seeds and parameters
set.seed(1123)
N &amp;lt;- 1e3
K &amp;lt;- 4

# Data Generating Proccess
a     &amp;lt;- 5
b     &amp;lt;- cbind(runif(K, -1,1))
X     &amp;lt;- matrix(rnorm(N*K), ncol = K)
y        &amp;lt;- a + X %*% b + rnorm(N)
y[y &amp;lt; 0] &amp;lt;- 0

# The zero dummy
zero_dummy &amp;lt;- cbind(runif(N)&amp;gt;.9) # 10% of non-reporting
y[zero_dummy] &amp;lt;- 0

# Running the specifications
summary(tobit(y~ X, subset = !zero_dummy))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## tobit(formula = y ~ X, subset = !zero_dummy)
## 
## Observations:
##          Total  Left-censored     Uncensored Right-censored 
##            908              1            907              0 
## 
## Coefficients:
##             Estimate Std. Error z value Pr(&amp;gt;|z|)    
## (Intercept)  4.97518    0.03166 157.146  &amp;lt; 2e-16 ***
## X1           0.49842    0.03244  15.364  &amp;lt; 2e-16 ***
## X2           0.74734    0.03165  23.611  &amp;lt; 2e-16 ***
## X3           0.69200    0.03063  22.589  &amp;lt; 2e-16 ***
## X4           0.13911    0.03028   4.595 4.33e-06 ***
## Log(scale)  -0.04781    0.02348  -2.036   0.0418 *  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Scale: 0.9533 
## 
## Gaussian distribution
## Number of Newton-Raphson Iterations: 5 
## Log-likelihood: -1245 on 6 Df
## Wald-statistic:  1346 on 4 Df, p-value: &amp;lt; 2.22e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(tobit(y~ X + zero_dummy))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## tobit(formula = y ~ X + zero_dummy)
## 
## Observations:
##          Total  Left-censored     Uncensored Right-censored 
##           1000             93            907              0 
## 
## Coefficients:
##                 Estimate Std. Error z value Pr(&amp;gt;|z|)    
## (Intercept)      4.97518    0.03166 157.146  &amp;lt; 2e-16 ***
## X1               0.49842    0.03244  15.364  &amp;lt; 2e-16 ***
## X2               0.74734    0.03165  23.611  &amp;lt; 2e-16 ***
## X3               0.69200    0.03063  22.589  &amp;lt; 2e-16 ***
## X4               0.13911    0.03028   4.595 4.33e-06 ***
## zero_dummyTRUE -12.33751  335.69958  -0.037   0.9707    
## Log(scale)      -0.04781    0.02348  -2.036   0.0418 *  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Scale: 0.9533 
## 
## Gaussian distribution
## Number of Newton-Raphson Iterations: 16 
## Log-likelihood: -1245 on 7 Df
## Wald-statistic:  1346 on 5 Df, p-value: &amp;lt; 2.22e-16&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luego de darle algunas vueltas, me di cuenta que lo que pasaba era los siguiente: En el modelo 1, MLE hace su trabajo, estima los parametros y ya. En el segundo modelo, cuando agregamos las observaciones con y=0 por supuesto junto con la dummy zero_dummy, lo unico que cambia de la función de Máxima Verosimilitud es el componente Probit (pues solo estamos agregando ceros), el componente OLS se mantiene igual pues zero_dummy = 0 en esa parte de la función. Luego, en la parte Tobit, y aquí es donde no estoy tan seguro como explicar esto con matemática, el MLE estima el modelo y, dado que zero_dummy predice a la parfección ceros cuando es igual a 1, asigna un valor grande a su coeficiente, haciendo que al final del día las observaciones adicionales no agreguen información al modelo, lo que termina en obtener el mismo set de estimadores.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yet another plot of R&#39;s colors()</title>
      <link>https://gvegayon.github.io/gvegayon/post/yet-another-plot-of-r-s-colors/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gvegayon.github.io/gvegayon/post/yet-another-plot-of-r-s-colors/</guid>
      <description>&lt;p&gt;I know there are plenty of these online, but I just thought about having my own for quick reference…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ncols &amp;lt;- ceiling(sqrt(length(colors())))^2
dat &amp;lt;- matrix(1:ncols, sqrt(ncols))
image(dat, col = colors()[1:ncols])
pos &amp;lt;- seq(0, 1, length.out = sqrt(ncols))
pos &amp;lt;- lapply(pos, function(x) cbind(x, pos))
pos &amp;lt;- do.call(rbind, pos)

ncols &amp;lt;- length(colors())
text(x=pos[1:ncols,2], y=pos[1:ncols,1], labels = 1:ncols, cex=.75, srt=60)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://gvegayon.github.io/gvegayon/&#34;https://gvegayon.github.io/gvegayon/&#34;  # End your URL with a `/` trailing slash.post/2017-09-15-yet-another-plot-of-r-s-colors_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;800px&#34; height=&#34;800px&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up optional OpenMP support with RcppArmadillo</title>
      <link>https://gvegayon.github.io/gvegayon/post/setting-up-optional-openmp-support-with-rcpparmadillo/</link>
      <pubDate>Tue, 29 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gvegayon.github.io/gvegayon/post/setting-up-optional-openmp-support-with-rcpparmadillo/</guid>
      <description>

&lt;p&gt;Setting up an R package that supports OpenMP can be a bit awkward. While systems like Ubuntu with g++ have straight forward support for &lt;code&gt;-fopenmp&lt;/code&gt; flags, the same may not be true un MacOS&amp;rsquo;s &lt;code&gt;clang&lt;/code&gt;, since the latter is not shipped with it.&lt;/p&gt;

&lt;p&gt;In order to solve this, it is necesary to have different &lt;code&gt;src/Makevars&lt;/code&gt; file depending on whether the compiler supports OpenMP or not. This can be solved using a &lt;code&gt;configure&lt;/code&gt; file, more over, &lt;code&gt;autoconf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/autoconf/autoconf.html&#34; target=&#34;_blank&#34;&gt;Autoconf&lt;/a&gt; is &amp;ldquo;an extensible package of M4 macros that produce shell scripts to automatically configure software source code packages&amp;rdquo;. Among the (cool) things that we can use it for is creating tailored &lt;code&gt;src/Makevars&lt;/code&gt; files (and furthermore, any other files&amp;hellip; even R/*.r source code can be modified with this, just take a look at &lt;a href=&#34;https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#Configure-and-cleanup&#34; target=&#34;_blank&#34;&gt;Writing R Extensions&lt;/a&gt;). The workflow of &lt;code&gt;R CMD&lt;/code&gt;+autoconf follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;configure&lt;/code&gt; file is executed and performs the requested checks (like having OpenMP) and modifies/creates the configuration files that will be used to compile the package, like &lt;code&gt;src/Makevars&lt;/code&gt;, &lt;code&gt;src/makefile&lt;/code&gt;, etc. Furthermore, it can use &amp;ldquo;templates&amp;rdquo; to create such files, which have the suffix &lt;code&gt;.in&lt;/code&gt;, for example, &lt;code&gt;src/Makevars.in&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;R CMD&lt;/code&gt; will compile the package using all the inputs (&lt;code&gt;src/Makevars&lt;/code&gt;, &lt;code&gt;src/makefile&lt;/code&gt;) that were created, and&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In the case of &lt;code&gt;R CMD build&lt;/code&gt;, &lt;code&gt;R CMD&lt;/code&gt; will call &lt;code&gt;cleanup&lt;/code&gt; (they require you to do so) to remove the &lt;code&gt;config.*&lt;/code&gt; files and &lt;code&gt;src/Makevars&lt;/code&gt; so these are not shipped with the package file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The next section describes the files that you need to include in your project to set it up using &lt;code&gt;RcppArmadillo&lt;/code&gt; with OpenMP support depending on whether it is available with the compiler. This example is from the R package &lt;a href=&#34;https://github.com/USCCANA/netdiffuseR&#34; target=&#34;_blank&#34;&gt;netdiffuseR&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;configuration-files&#34;&gt;Configuration Files&lt;/h1&gt;

&lt;p&gt;In order to use &lt;code&gt;autoconf&lt;/code&gt; to optionally include OpenMP with your R package, you need to have the following files in your system:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Need a &lt;code&gt;configure.ac&lt;/code&gt; file. This is what &lt;code&gt;autoconf&lt;/code&gt; uses as input.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#                                               -*- Autoconf -*-
# netdiffuseR configure.ac
# (with some code borrowed from RcppArmadillo configure.ac
# and ARTP2 configure.ac)
# 
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.69])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This line can be replaced by whatever the name of your package is (here is netdiffuseR)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AC_INIT(netdiffuseR, m4_esyscmd_s([awk &#39;/^Version:/ {print $2}&#39; DESCRIPTION]))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These couple of lines set up the path to R.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Set R_HOME, respecting an environment variable if one is set 
: ${R_HOME=$(R RHOME)}
if test -z &amp;quot;${R_HOME}&amp;quot;; then
    AC_MSG_ERROR([Could not determine R_HOME.])   
fi
# Use R to set CXX and CXXFLAGS
CXX=$(${R_HOME}/bin/R CMD config CXX)
CXXFLAGS=$(&amp;quot;${R_HOME}/bin/R&amp;quot; CMD config CXXFLAGS)

# We are using C++
AC_LANG(C++)
AC_REQUIRE_CPP
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This are the lines that actually do the job on setting OpenMP. I copied this from the ARTP2 R Package.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dnl this the meat of R&#39;s m4/openmp.m4
  OPENMP_[]_AC_LANG_PREFIX[]FLAGS=
  AC_ARG_ENABLE([openmp],
    [AS_HELP_STRING([--disable-openmp], [do not use OpenMP])])
  if test &amp;quot;$enable_openmp&amp;quot; != no; then
    AC_CACHE_CHECK([for $[]_AC_CC[] option to support OpenMP],
      [ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp],
      [AC_LINK_IFELSE([_AC_LANG_OPENMP],
     [ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp=&#39;none needed&#39;],
     [ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp=&#39;unsupported&#39;
      for ac_option in -fopenmp -xopenmp -qopenmp \
                           -openmp -mp -omp -qsmp=omp -homp \
               -fopenmp=libomp \
                           -Popenmp --openmp; do
        ac_save_[]_AC_LANG_PREFIX[]FLAGS=$[]_AC_LANG_PREFIX[]FLAGS
        _AC_LANG_PREFIX[]FLAGS=&amp;quot;$[]_AC_LANG_PREFIX[]FLAGS $ac_option&amp;quot;
        AC_LINK_IFELSE([_AC_LANG_OPENMP],
          [ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp=$ac_option])
        _AC_LANG_PREFIX[]FLAGS=$ac_save_[]_AC_LANG_PREFIX[]FLAGS
        if test &amp;quot;$ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp&amp;quot; != unsupported; then
          break
        fi
      done])])
    case $ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp in #(
      &amp;quot;none needed&amp;quot; | unsupported)
    ;; #(
      *)
    OPENMP_[]_AC_LANG_PREFIX[]FLAGS=$ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp ;;
    esac
  fi

AC_SUBST(OPENMP_CXXFLAGS)
AC_CONFIG_FILES([src/Makevars])
AC_OUTPUT
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A &lt;code&gt;src/Makevars.in&lt;/code&gt; file which will be modified by configure. The most important part here is the &lt;code&gt;@OPENMP_CXXFLAGS@&lt;/code&gt; tag, which will be replaced accordingly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) @OPENMP_CXXFLAGS@
# 1.2.4 Using C++11 code
CXX_STD = CXX11

# Besides of the -fopenmp flag, here I&#39;m telling armadillo to use
# 64BIT_WORD which removes the matrix size limit constraint.
PKG_CXXFLAGS=@OPENMP_CXXFLAGS@ -DARMA_64BIT_WORD
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A &lt;code&gt;cleanup&lt;/code&gt; file (with execution permissions) that &lt;code&gt;R CMD build&lt;/code&gt; will call after building the package. Again, this is a requirement.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
rm -f config.* src/Makevars
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once you have all these files in order, you have to run &lt;code&gt;autoconf&lt;/code&gt; so that the &lt;code&gt;configure&lt;/code&gt; file is created, i.e.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ autoconf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you happen to use travis.yml, you need to specify a more modern distribution so that RcppArmadillo can built with a more modern compiler. In order to do so, put the &lt;code&gt;dist: trusty&lt;/code&gt; option in the yml file. Here is an example travis file from netdiffuseR:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;dist: trusty
language: r
sudo: required

r:
  - release
  - devel # Not working
  - oldrel

os:
  - linux
  - osx

osx_image: xcode7.3

env:
 global:
   - CRAN: http://cran.rstudio.com

r_packages:
  - ape
  - covr
  - testthat
  - knitr
  - rmarkdown
  - RSiena
  - igraph
  - survival

after_success:
  - if [ $TRAVIS_OS_NAME == &amp;quot;linux&amp;quot; ]; then Rscript -e &#39;covr::codecov()&#39;; fi

after_failure:
  - ./run.sh dump_logs

notifications:
  email:
    on_success: change
    on_failure: change
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, you&amp;rsquo;ll need to add/keep the following files to your repository: &lt;code&gt;configure&lt;/code&gt;, &lt;code&gt;configure.ac&lt;/code&gt;, &lt;code&gt;src/Makevars.in&lt;/code&gt;, &lt;code&gt;src/Makevars.win&lt;/code&gt;, and &lt;code&gt;cleanup&lt;/code&gt;. Otherwise you&amp;rsquo;ll find yourself scratching your head and asking why is travis failing&amp;hellip; belive me.&lt;/p&gt;

&lt;h1 id=&#34;see-also&#34;&gt;See also&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The RcppArmadillo &lt;a href=&#34;https://github.com/RcppCore/RcppArmadillo/blob/dcc8d474446aacabbb13813ee7da4636eeeee450/configure.ac&#34; target=&#34;_blank&#34;&gt;configure.ac&lt;/a&gt; file&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The netdiffuseR &lt;a href=&#34;https://github.com/USCCANA/netdiffuseR/blob/98020e28dce5fd8cbabd497eb7fbf99be3ec0e2e/configure.ac&#34; target=&#34;_blank&#34;&gt;configure.ac&lt;/a&gt; file.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The aphylo [configure.ac]() file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
